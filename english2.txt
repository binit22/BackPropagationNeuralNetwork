In order to train your network, you will first need to collect appropriate training (and test) data. Note that each of the three Wikis have a "Random article" or similar operation which you will probably avail yourself of. Also, you should take the test data information into account when collecting your training set. When training your network, note that your input will be numeric values that are functions of the text. You may use any features that you want that you think will best help to discriminate between languages, other than any references to specific words in any language. You should probably also maintain a separate test set to help decide how well your network is learning the three languages. When your code is submitted, I will test it by feeding it several text segments from the three Wikis. Each segment will be between 10 and 100 words long. I will not use any text from the "References", "Notes", "See Also", or "Further Reading" sections (or their equivalents in other languages). I will also not use any text from pages which are primarily lists or are otherwise not representative of the language. Your code should print out which language the network believes the text segment to be in. Your code may be written in Python, C, C++, or Java. It should run on the CS Linux machines with no additional libraries required (if you believe you need some library, you may ask.) You should provide two entry points to the code: one for training and one for testing. Note that when I test your code, I will not do any training - your code should include some hard-coded (in the code itself or in a file that you also submit) network that you believe is the best classifier that you have. The tester should accept a single text segment on standard input and print out its best guess for the language. The trainer may use any type of input but be sure to document its usage. Your writeup constitutes a significant portion of the grade for this project. You should make sure to discuss your feature selection, data gathering, and the training process that you followed to produce your best network (and why you think this is in fact your best network). Of course you should also include information on how to run your code.